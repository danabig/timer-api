openapi: 3.0.0
tags:
  - name: timer-api
    description: timer-api operations
info:
  title: timer-api
  version: '1.0'
  description: timer api description
  contact:
    name: Dan
    email: dan.abig@gmail.com
servers: []
paths:
  /timers:
    post:
      summary: Create new timer
      operationId: post-timers
      responses:
        '201':
          description: Timer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              examples: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
      description: Create a new timer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hours:
                  type: integer
                minutes:
                  type: integer
                seconds:
                  type: integer
                url:
                  type: string
            examples:
              example-1:
                value:
                  hours: 4
                  minutes: 0
                  seconds: 1
                  url: 'https://someserver.com'
        description: Timer details are expected
      parameters: []
    parameters: []
  '/timers/{timer_id}':
    parameters:
      - schema:
          type: string
        name: timer_id
        in: path
        required: true
        description: The timer di to get
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  time_left:
                    type: integer
      operationId: get-timers-timer_id
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: ''
